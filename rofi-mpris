#!/bin/bash

DEFAULT_THEME="$HOME/.config/rofi/config.rasi"
if [[ -z $1 ]]; then
    FIRST_THEME="$DEFAULT_THEME"
    SECOND_THEME="$DEFAULT_THEME"
elif [[ -z $2 ]]; then
    FIRST_THEME="$1"
    SECOND_THEME="$1"
else
    FIRST_THEME="$1"
    SECOND_THEME="$2"
fi

# setting up symbols used in the menu. you`re encouraged to change them
declare -A labels=(
    ["play"]="󰐊"
    ["pause"]="󰏤"
    ["play_pause"]="󰐎"
    ["stop"]="󰓛"
    ["next"]="󰒭"
    ["prev"]="󰒮"
    ["loop"]="󰑖"
    ["shuffle"]="󰒝"
    ["active"]="󰝚"
    ["inactive"]="󰝛"
    ["target_all_players"]="All"
    ["target_all_active_players"]="Active"
    ["target_all_inactive_players"]="Inactive"
)

# setting up options shown in the second level menu. again, you are encouraged to change them
# can include play pause play-pause stop next prev loop shuffle in any order
options=(
      "stop"
      "prev"
      "play_pause"
      "next"
      "loop"
)

# setting up commands passed to mpris-ctl. can be changed to commands listed in mpris-ctl -h
declare -A commands=(
    ["play"]="play"
    ["pause"]="pause"
    ["play_pause"]="pp"
    ["stop"]="stop"
    ["next"]="next"
    ["prev"]="prev"
    ["loop"]="repeat --track"
    ["shuffle"]="shuffle"
    ["target_all_players"]="--player active --player inactive"
    ["target_all_active_players"]="--player active"
    ["target_all_inactive_players"]="--player inactive"
)

special_targets=(
    "target_all_players"
    #"target_all_active_players"
    #"target_all_inactive_players"
)

rofi_first_params=(
    -dmenu
    -p ""
    -format i
    -theme "$FIRST_THEME"
)
rofi_second_params=(
    -no-fixed-num-lines
    -selected-row 2 # <- row selected by default. useful
    -dmenu
    -p "$target_label"
    -format i
    -theme "$SECOND_THEME"
)
declare -a option_display_array
for option in "${options[@]}"; do
    option_display_array+=("${labels["$option"]}")
done
# making the options display an array that then gets converted to a string
# makes it a bit easier to work with if someone wants to extend this script
option_display="$(printf "%s\n" "${option_display_array[@]}")"

# first menu level loop
while true; do
    playerstring="$(mpris-ctl ${commands["target_all_players"]} list)"
    # mris-ctl exits with 1 if no players are found
    if [[ $? == 1 ]]; then
        rofi -e "No MPRIS players running."
        exit 1
    fi
    readarray -t players <<<"$playerstring"
    declare -a target_display=( ) # <- this gets passed to rofi after we build it
    for target in "${special_targets[@]}"; do
        target_display+=("${labels["$target"]}")
    done
    for player in "${players[@]}"; do
        if [[ "$(mpris-ctl --player "$player" status)" == "Playing" ]]; then
            status="${labels["active"]}"
        else
            status="${labels["inactive"]}"
        fi
        player_info="$(mpris-ctl --player "$player" info "%player_name\t%artist_name - %track_name")"
        target_display+=("$status $player_info")
    done

    target_index="$(printf "%s\n" "${target_display[@]}" | rofi "${rofi_first_params[@]}")"
    if [[ -z $target_index ]]; then
        # $player_index is empty if rofi gets passed ESC
        break
    fi
    if [[ -n "${special_targets[$target_index]}" ]]; then
        # if index points to special target, use that
        target_label="${labels[${special_targets[$target_index]}]}"
        targeting_command="${commands[${special_targets[$target_index]}]}"
    else
        #otherwise we shift by the length of special targets and index players
        target_index=$((target_index - ${#special_targets[@]}))
        targeting_command="--player \"${players[$target_index]}\""
    fi
    # second menu level loop
    while true; do
        option_index="$(echo "$option_display"| rofi "${rofi_second_params[@]}")"
        if [[ -z $option_index ]]; then
            break
        fi
        option_command="${commands[${options[$option_index]}]}"
        eval "mpris-ctl $targeting_command $option_command" # scary!
    done
done
