#!/bin/bash
# This code is awful but it works

THEME="$1"
THEME2="$2"

# setting up symbols used in the menu. you`re encouraged to change them
play="󰐊"
pause="󰏤"
play_pause="󰐎"
stop_="󰓛"
next="󰒭"
prev="󰒮"
loop="󰑖"
shuffle="󰒝"
back="󰁝"

# setting up options shown in the second level menu. again, you are encouraged to change them
# can include $back $play $pause $play-pause $_stop $next $prev $loop $shuffle in any order
options="$stop_\n$prev\n$play_pause\n$next\n$loop"


# first menu level loop
while true; do
    players="$(playerctl -l)"
    if [[ -z $players ]]; then
        rofi -e "No MPRIS players running."
        exit 0
    fi
    player_info="All"
    for player in $players; do
        if [[ $(playerctl -p "$player" status) == "Playing" ]]; then
            status="󰝚"
        else
            status="󰝛"
        fi
        player_info+="\n$status ${player%.*}\t$(playerctl -p $player metadata --format '{{ artist }} - {{ title }}')"
    done
    if [[ -n "$THEME" ]]; then
        chosen_player="$(echo -e $player_info | rofi -theme "$THEME" -dmenu -p "" )"
    else
        chosen_player="$(echo -e $player_info | rofi -dmenu -p "" )"
    fi

    chosen_player="$(echo $chosen_player | cut -d ' ' -f 2)"

    if [[ $chosen_player == "All" ]]; then
        chosen_player="-a"
    elif [[ -z $chosen_player ]]; then
        # chosen_player is empty if rofi gets passed ESC
        break
    else
        chosen_player="-p $chosen_player"
    fi
    # second menu level loop
    while true; do
        rofi_cmd="rofi -no-fixed-num-lines -selected-row 2 -dmenu -i $chosen_player"

        if [[ -n "$THEME2" ]]; then
            rofi_cmd+=" -theme $THEME2"
        elif [[ -n "$THEME" ]]; then
            rofi_cmd+=" -theme $THEME"
        fi

        chosen_option="$(echo -e "$options" | $rofi_cmd)"

        case $chosen_option in
            "$back")
                break
                ;;
            "")
                # ESC handling
                break
                ;;
            "$play")
                player_option="play"
                ;;
            "$pause")
                player_option="pause"
                ;;
            "$play_pause")
                player_option="play-pause"
                ;;
            "$stop_")
                player_option="stop"
                ;;
            "$next")
                player_option="next"
                ;;
            "$prev")
                player_option="previous"
                ;;
            "$loop")
                if [[ "$(playerctl -p "$chosen_player" loop)" == "None" ]]; then
                    player_option="loop Track"
                    # uncomment next line to change loop behavior to target the playlist
                    # player_option="loop Playlist"
                else
                    player_option="loop None"
                fi
                ;;
            "$shuffle")
                player_option="shuffle Toggle"
                ;;
        esac
        playerctl $chosen_player $player_option
    done
done
